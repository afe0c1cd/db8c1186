openapi: 3.0.0
info:
  title: ToDo API
  version: 1.0.0
paths:
  /v1/todos:
    get:
      summary: Get todos with optional visibility filter
      parameters:
        - name: visibility
          in: query
          required: false
          schema:
            type: string
            enum: [all, private, internal]
          description: Filter todos by visibility, default is all
      responses:
        '200':
          description: List of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      summary: Create a new organization todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoRequest'
      responses:
        '201':
          description: Todo created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /v1/todos/{todoId}:
    delete:
        summary: Delete a todo by ID
        parameters:
          - name: todoId
            in: path
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '204':
            description: Todo deleted successfully
          '404':
            description: Todo not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update an existing todo
      parameters:
        - name: todoId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoRequest'
      responses:
        '200':
          description: Todo updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    CreateTodoRequest:
      type: object
      properties:
        due_date:
          type: string
          format: date-time
        title:
          type: string
          description: Title of the todo item
        description:
          type: string
          description: Description of the
        assignee_user_ids:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs assigned to the todo item
        visibility:
          type: string
          enum: [private, internal]
          description: Visibility of the todo item
        status:
          type: string
          enum: [open, closed]
          description: Status of the todo item
      required:
        - title
        - visibility
    UpdateTodoRequest:
      type: object
      properties:
        due_date:
          type: string
          format: date-time
        title:
          type: string
          description: Title of the todo item
        description:
          type: string
          description: Description of the todo item
        visibility:
          type: string
          enum: [private, internal]
          description: Visibility of the todo item
        status:
          type: string
          enum: [open, closed]
          description: Status of the todo item
    Todo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        due_date:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        assignee_user_ids:
          type: array
          items:
            type: string
            format: uuid
        visibility:
          type: string
          enum: [private, internal]
        status:
          type: string
          enum: [open, closed]
        created_at:
          type: string
          format: date-time
        updated_at:
            type: string
            format: date-time
      required:
        - id
        - title
        - visibility
        - created_at
        - updated_at
